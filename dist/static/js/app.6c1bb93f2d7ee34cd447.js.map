{"version":3,"sources":["webpack:///static/js/app.6c1bb93f2d7ee34cd447.js","webpack:///./src/App.vue?c41a","webpack:///./src/mock/index.js","webpack:///./src/vuex/store.js","webpack:///./src/App.vue?502c","webpack:///App.vue","webpack:///./src/main.js","webpack:///./src/mock/data/user.js","webpack:///./src/mock/mock.js","webpack:///./src/vuex/actions.js","webpack:///./src/vuex/getters.js"],"names":["webpackJsonp","210","module","exports","__webpack_require__","Component","211","212","215","Object","defineProperty","value","_mock","_mock2","obj","__esModule","default","216","Error","217","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","call","_interopRequireDefault","_vue","_vue2","_vuex","_vuex2","_actions","actions","_getters","getters","use","state","count","mutations","INCREMENT","DECREMENT","Store","285","render","_vm","this","_h","$createElement","_c","_self","attrs","id","name","mode","staticRenderFns","289","532","components","533","_babelPolyfill","_App","_App2","_elementUi","_elementUi2","_vueRouter","_vueRouter2","_store","_store2","_routes","_routes2","bootstrap","router","routes","beforeEach","to","from","next","path","sessionStorage","removeItem","JSON","parse","getItem","store","h","$mount","534","bannerList","freeList","chapterList","chapter","article","classList","Users","LoginUsers","undefined","_mockjs","_mockjs2","username","password","avatar","i","push","mock","Random","guid","cname","addr","age|18-60","birth","date","sex","integer","increment","title","ctitle","banner","image","tag","cword","desc","prize","peoples","img","cparagraph","link","url","classId","type|1-2","video","535","_stringify","_stringify2","_promise","_promise2","_axios","_axios2","_axiosMockAdapter","_axiosMockAdapter2","_user","_Users","_classList","_article","_chapter","_chapterList","_freeList","_bannerList","onGet","reply","msg","onPost","config","_JSON$parse","data","resolve","reject","user","setTimeout","hasUser","some","u","code","params","mockUsers","filter","indexOf","users","_config$params","page","total","length","index","ids","split","includes","_config$params2","age","_config$params3","mockClasses","val","_config$params4","c","_config$params5","forEach","splice","_config$params6","text","_config$params7","_config$params8","classChapterList","_config$params9","type","_config$params10","_config$params11","_config$params12","_config$params13","_config$params14","_config$params15","_config$params16","_config$params17","536","_ref","commit","decrement","_ref2","537","getCount"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GCDjCA,EAAA,IAEA,IAAAC,GAAAD,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,IACA,SAAUJ,EAAQC,KAMlBI,IACA,SAAUL,EAAQC,KAMlBK,IACA,SAAUN,EAAQC,EAASC,GAEjC,YAGAK,QAAOC,eAAeP,EAAS,cAC7BQ,OAAO,GE9CT,IAAAC,GAAAR,EAAA,KFmDIS,EAEJ,SAAgCC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,IAFnDF,EAIpCT,GAAQa,QAAUH,EAAOG,SAInBC,IACA,SAAUf,EAAQC,GAExB,KAAM,IAAIe,OAAM,gPAIVC,IACA,SAAUjB,EAAQC,EAASC,GAEjC,YAuBA,SAASgB,GAAwBN,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIO,KAAa,IAAW,MAAPP,EAAe,IAAK,GAAIQ,KAAOR,GAAWL,OAAOc,UAAUC,eAAeC,KAAKX,EAAKQ,KAAMD,EAAOC,GAAOR,EAAIQ,GAAgC,OAAtBD,GAAOL,QAAUF,EAAYO,EAElQ,QAASK,GAAuBZ,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAtBvFL,OAAOC,eAAeP,EAAS,cAC3BQ,OAAO,GGzEX,IAAAgB,GAAAvB,EAAA,IH8EIwB,EAAQF,EAAuBC,GG7EnCE,EAAAzB,EAAA,KHiFI0B,EAASJ,EAAuBG,GGhFpCE,EAAA3B,EAAA,KAAY4B,EHoFEZ,EAAwBW,GGnFtCE,EAAA7B,EAAA,KAAY8B,EHuFEd,EAAwBa,EGrFtCL,GAAAZ,QAAImB,IAAJL,EAAAd,QAGA,IAAMoB,IACFC,MAAO,IAILC,GACFC,UADc,SACJH,GACNA,EAAMC,SAEVG,UAJc,SAIJJ,GACNA,EAAMC,SH6FdlC,GAAQa,QGxFO,GAAIc,GAAAd,QAAKyB,OACpBT,UACAE,UACAE,QACAE,eH6FEI,IACA,SAAUxC,EAAQC,GIzHxBD,EAAAC,SAAgBwC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,CAC1E,OAAAE,GAAA,OACAE,OACAC,GAAA,SAEGH,EAAA,cACHE,OACAE,KAAA,OACAC,KAAA,YAEGL,EAAA,wBACFM,qBJ+HKC,IACA,SAAUrD,EAAQC,KAMlBqD,IACA,SAAUtD,EAAQC,EAASC,GAEjC,YAGAK,QAAOC,eAAeP,EAAS,cAC9BQ,OAAO,IAERR,EAAQa,SACPoC,KK/ID,MLgJCK,gBAKKC,IACA,SAAUxD,EAAQC,EAASC,GAEjC,YA2CA,SAASsB,GAAuBZ,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GM/MvF,GAAA6C,GAAAvD,EAAA,KACAuB,GNwKsBD,EAAuBiC,GMxK7CvD,EAAA,KN4KIwB,EAAQF,EAAuBC,GM3KnCiC,EAAAxD,EAAA,KN+KIyD,EAAQnC,EAAuBkC,GM9KnCE,EAAA1D,EAAA,KNkLI2D,EAAcrC,EAAuBoC,EMjLzC1D,GAAA,IAEA,IAAA4D,GAAA5D,EAAA,KNqLI6D,EAAcvC,EAAuBsC,GMpLzCE,EAAA9D,EAAA,KNwLI+D,EAAUzC,EAAuBwC,GMvLrCrC,EAAAzB,EAAA,KN2LI0B,EAASJ,EAAuBG,GMxLpCuC,EAAAhE,EAAA,KN4LIiE,EAAW3C,EAAuB0C,GM3LtCxD,EAAAR,EAAA,KN+LIS,EAASa,EAAuBd,EM7LpCR,GAAA,KADAS,EAAAG,QAAKsD,YAGL1C,EAAAZ,QAAImB,IAAJ4B,EAAA/C,SACAY,EAAAZ,QAAImB,IAAJ8B,EAAAjD,SACAY,EAAAZ,QAAImB,IAAJL,EAAAd,QAIA,IAAMuD,GAAS,GAAAN,GAAAjD,SACbwD,kBAGFD,GAAOE,WAAW,SAACC,EAAIC,EAAMC,GAEZ,UAAXF,EAAGG,MACLC,eAAeC,WAAW,QAEjBC,KAAKC,MAAMH,eAAeI,QAAQ,UACrB,UAAXR,EAAGG,KAGdD,IAFAA,GAAOC,KAAM,aAUjB,GAAAjD,GAAAZ,SAGEuD,SACAY,gBAEAxC,OAAQ,SAAAyC,GAAA,MAAKA,iBACZC,OAAO,SNiMJC,IACA,SAAUpF,EAAQC,EAASC,GAEjC,YAGAK,QAAOC,eAAeP,EAAS,cAC7BQ,OAAO,IAETR,EAAQoF,WAAapF,EAAQqF,SAAWrF,EAAQsF,YAActF,EAAQuF,QAAUvF,EAAQwF,QAAUxF,EAAQyF,UAAYzF,EAAQ0F,MAAQ1F,EAAQ2F,eAAaC,EO9O3J,KAAK,GAdLC,GAAA5F,EAAA,KPgQI6F,EAEJ,SAAgCnF,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,IAFjDkF,GO/PhCF,IAEF3C,GAAI,EACJ+C,SAAU,QACVC,SAAU,SACVC,OAAQ,2FACRhD,KAAM,QAKJyC,KAEGQ,EAAI,EAAGA,EAAI,GAAIA,IACtBR,EAAMS,KAAKL,EAAAjF,QAAKuF,MACdpD,GAAI8C,EAAAjF,QAAKwF,OAAOC,OAChBrD,KAAM6C,EAAAjF,QAAKwF,OAAOE,QAClBC,KAAMV,EAAAjF,QAAKuF,KAAK,iBAChBK,YAAa,EACbC,MAAOZ,EAAAjF,QAAKwF,OAAOM,OACnBC,IAAKd,EAAAjF,QAAKwF,OAAOQ,QAAQ,EAAG,KAOhC,KAAK,GAFCpB,MAEGS,EAAI,EAAGA,EAAI,EAAGA,IACrBT,EAAUU,KAAKL,EAAAjF,QAAKuF,MAClBpD,GAAI8C,EAAAjF,QAAKwF,OAAOS,YAChBC,MAAOjB,EAAAjF,QAAKwF,OAAOW,SACnBC,OAAQnB,EAAAjF,QAAKwF,OAAOa,MAAM,UAAU,WACpCC,IAAIrB,EAAAjF,QAAKwF,OAAOe,MAAM,GACtBC,KAAKvB,EAAAjF,QAAKwF,OAAOe,MAAM,IACvBE,MAAOxB,EAAAjF,QAAKwF,OAAOQ,QAAQ,EAAG,KAC9BU,QAAQzB,EAAAjF,QAAKwF,OAAOQ,QAAQ,IAAK,OAOrC,KAAK,GAFCrB,MAEGU,EAAI,EAAGA,EAAI,EAAGA,IACrBV,EAAQW,KAAKL,EAAAjF,QAAKuF,MAChBW,MAAOjB,EAAAjF,QAAKwF,OAAOW,SACnBQ,IAAK1B,EAAAjF,QAAKwF,OAAOa,MAAM,UAAU,WACjCG,KAAKvB,EAAAjF,QAAKwF,OAAOoB,aACjBC,KAAK5B,EAAAjF,QAAKwF,OAAOsB,IAAI,UAOzB,KAAK,GAFCpC,MAEGW,EAAI,EAAGA,EAAI,EAAGA,IACrBX,EAAQY,KAAKL,EAAAjF,QAAKuF,MAChBpD,GAAG8C,EAAAjF,QAAKwF,OAAOS,YACfc,QAAQ,EACRb,MAAOjB,EAAAjF,QAAKwF,OAAOW,SACnBK,KAAKvB,EAAAjF,QAAKwF,OAAOoB,eAQrB,KAAK,GAFCnC,MAEGY,EAAI,EAAGA,EAAI,EAAGA,IACrBZ,EAAYa,KAAKL,EAAAjF,QAAKuF,MACpBpD,GAAG8C,EAAAjF,QAAKwF,OAAOS,YACfe,WAAW,EACXd,MAAMjB,EAAAjF,QAAKwF,OAAOW,SAClBK,KAAKvB,EAAAjF,QAAKwF,OAAOe,MAAM,IACvBI,IAAI1B,EAAAjF,QAAKwF,OAAOa,MAAM,UAAU,WAChCY,MAAMhC,EAAAjF,QAAKwF,OAAOsB,IAAI,QACtBnC,QAAQM,EAAAjF,QAAKwF,OAAOoB,eAQxB,KAAK,GAFCpC,MAEGa,EAAI,EAAGA,EAAI,EAAGA,IACrBb,EAASc,KAAKL,EAAAjF,QAAKuF,MACjBpD,GAAG8C,EAAAjF,QAAKwF,OAAOS,YACfe,WAAW,EACXd,MAAMjB,EAAAjF,QAAKwF,OAAOW,SAClBK,KAAKvB,EAAAjF,QAAKwF,OAAOe,MAAM,IACvBI,IAAI1B,EAAAjF,QAAKwF,OAAOa,MAAM,UAAU,WAChCY,MAAMhC,EAAAjF,QAAKwF,OAAOsB,IAAI,QACtBnC,QAAQM,EAAAjF,QAAKwF,OAAOoB,eAQxB,KAAK,GAFCrC,MAEGc,EAAI,EAAGA,EAAI,EAAGA,IACrBd,EAAWe,KAAKL,EAAAjF,QAAKuF,MACnBpD,GAAG8C,EAAAjF,QAAKwF,OAAOS,YACfC,MAAMjB,EAAAjF,QAAKwF,OAAOW,SAClBQ,IAAI1B,EAAAjF,QAAKwF,OAAOa,MAAM,UAAU,WAChCQ,KAAK5B,EAAAjF,QAAKwF,OAAOsB,IAAI,UP4PzB3H,GOxPS2F,aPyPT3F,EOzPqB0F,QP0PrB1F,EO1P4ByF,YP2P5BzF,EO3PsCwF,UP4PtCxF,EO5P8CuF,UP6P9CvF,EO7PsDsF,cP8PtDtF,EO9PkEqF,WP+PlErF,EO/P2EoF,cPmQrE2C,IACA,SAAUhI,EAAQC,EAASC,GAEjC,YAyBA,SAASsB,GAAuBZ,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAtBvFL,OAAOC,eAAeP,EAAS,cAC7BQ,OAAO,GAGT,IAAIwH,GAAa/H,EAAoB,KAEjCgI,EAAc1G,EAAuByG,GAErCE,EAAWjI,EAAoB,KAE/BkI,EAAY5G,EAAuB2G,GQhYvCE,EAAAnI,EAAA,KRoYIoI,EAAU9G,EAAuB6G,GQnYrCE,EAAArI,EAAA,KRuYIsI,EAAqBhH,EAAuB+G,GQtYhDE,EAAAvI,EAAA,KAUIwI,UACAC,cACAC,YACAC,YACAC,gBACAC,aACAC,cRoYJ/I,GAAQa,SQ7XNsD,UAJa,WAKX,GAAIiC,GAAO,GAAAmC,GAAA1H,QAAAwH,EAAAxH,QAGXuF,GAAK4C,MAAM,YAAYC,MAAM,KAC3BC,IAAK,YAIP9C,EAAK4C,MAAM,UAAUC,MAAM,KACzBC,IAAK,YAIP9C,EAAK+C,OAAO,UAAUF,MAAM,SAAAG,GAAU,GAAAC,GACTxE,KAAKC,MAAMsE,EAAOE,MAAxCvD,EAD+BsD,EAC/BtD,SAAUC,EADqBqD,EACrBrD,QACf,OAAO,IAAAmC,GAAAtH,QAAY,SAAC0I,EAASC,GAC3B,GAAIC,GAAO,IACXC,YAAW,WACT,GAAIC,GAAUnB,EAAA7C,WAAWiE,KAAK,SAAAC,GAC5B,GAAIA,EAAE9D,WAAaA,GAAY8D,EAAE7D,WAAaA,EAG5C,MAFAyD,GAAO5E,KAAKC,OAAM,EAAAmD,EAAApH,SAAegJ,IACjCJ,EAAKzD,aAAWJ,IACT,GAKT2D,GADEI,GACO,KAAOG,KAAM,IAAKZ,IAAK,OAAQO,UAE/B,KAAOK,KAAM,IAAKZ,IAAK,cAEjC,SAKP9C,EAAK4C,MAAM,cAAcC,MAAM,SAAAG,GAAU,GAClCnG,GAAQmG,EAAOW,OAAf9G,KACD+G,EAAYvB,EAAOwB,OAAO,SAAAR,GAC5B,OAAIxG,IAAoC,GAA5BwG,EAAKxG,KAAKiH,QAAQjH,IAGhC,OAAO,IAAAkF,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPY,MAAOH,MAER,SAMP5D,EAAK4C,MAAM,kBAAkBC,MAAM,SAAAG,GAAU,GAAAgB,GACxBhB,EAAOW,OAArBM,EADsCD,EACtCC,KAAMpH,EADgCmH,EAChCnH,KACP+G,EAAYvB,EAAOwB,OAAO,SAAAR,GAC5B,OAAIxG,IAAoC,GAA5BwG,EAAKxG,KAAKiH,QAAQjH,KAG5BqH,EAAQN,EAAUO,MAEtB,OADAP,GAAYA,EAAUC,OAAO,SAACJ,EAAGW,GAAJ,MAAcA,GAAQ,GAAKH,GAAQG,GAAS,IAAMH,EAAO,KAC/E,GAAAlC,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPe,MAAOA,EACPH,MAAOH,MAER,SAKP5D,EAAK4C,MAAM,gBAAgBC,MAAM,SAAAG,GAAU,GACnCpG,GAAOoG,EAAOW,OAAd/G,EAEN,OADAyF,GAASA,EAAOwB,OAAO,SAAAJ,GAAA,MAAKA,GAAE7G,KAAOA,IAC9B,GAAAmF,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,WAEN,SAKP9C,EAAK4C,MAAM,qBAAqBC,MAAM,SAAAG,GAAU,GACxCqB,GAAQrB,EAAOW,OAAfU,GAGN,OAFAA,GAAMA,EAAIC,MAAM,KAChBjC,EAASA,EAAOwB,OAAO,SAAAJ,GAAA,OAAMY,EAAIE,SAASd,EAAE7G,MACrC,GAAAmF,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,WAEN,SAKP9C,EAAK4C,MAAM,cAAcC,MAAM,SAAAG,GAAU,GAAAwB,GACGxB,EAAOW,OAA3C/G,EADiC4H,EACjC5H,GAAIC,EAD6B2H,EAC7B3H,KAAMuD,EADuBoE,EACvBpE,KAAMqE,EADiBD,EACjBC,IAAKnE,EADYkE,EACZlE,MAAOE,EADKgE,EACLhE,GAWlC,OAVA6B,GAAOmB,KAAK,SAAAC,GACV,GAAIA,EAAE7G,KAAOA,EAMX,MALA6G,GAAE5G,KAAOA,EACT4G,EAAErD,KAAOA,EACTqD,EAAEgB,IAAMA,EACRhB,EAAEnD,MAAQA,EACVmD,EAAEjD,IAAMA,GACD,IAGJ,GAAAuB,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,WAEN,SAKP9C,EAAK4C,MAAM,aAAaC,MAAM,SAAAG,GAAU,GAAA0B,GACA1B,EAAOW,OAAvC9G,EADgC6H,EAChC7H,KAAMuD,EAD0BsE,EAC1BtE,KAAMqE,EADoBC,EACpBD,IAAKnE,EADeoE,EACfpE,MAAOE,EADQkE,EACRlE,GAQ9B,OAPA6B,GAAOtC,MACLlD,KAAMA,EACNuD,KAAMA,EACNqE,IAAKA,EACLnE,MAAOA,EACPE,IAAKA,IAEA,GAAAuB,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,WAEN,SAKP9C,EAAK4C,MAAM,eAAeC,MAAM,SAAAG,GAAU,GACnCrC,GAASqC,EAAOW,OAAhBhD,MACDgE,EAAcrC,EAAWuB,OAAO,SAAAe,GAClC,OAAIjE,IAAsC,GAA7BiE,EAAIjE,MAAMmD,QAAQnD,IAGjC,OAAO,IAAAoB,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACP9D,UAAWsF,MAEZ,SAKP3E,EAAK4C,MAAM,eAAeC,MAAM,SAAAG,GAAU,GAAA6B,GACY7B,EAAOW,OAArD/G,EADkCiI,EAClCjI,GAAI+D,EAD8BkE,EAC9BlE,MAAOE,EADuBgE,EACvBhE,OAAOI,EADgB4D,EAChB5D,KAAKF,EADW8D,EACX9D,IAAII,EADO0D,EACP1D,QAASD,EADF2D,EACE3D,KAY1C,OAXAoB,GAAWkB,KAAK,SAAAsB,GACd,GAAIA,EAAElI,KAAOA,EAOX,MANAkI,GAAEnE,MAAQA,EACVmE,EAAEjE,OAASA,EACXiE,EAAE7D,KAAOA,EACT6D,EAAE/D,IAAMA,EACR+D,EAAE3D,QAAUA,EACZ2D,EAAE5D,MAAQA,GACH,IAGJ,GAAAa,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,WAEN,SAIP9C,EAAK4C,MAAM,cAAcC,MAAM,SAAAG,GAAU,GAAA+B,GACa/B,EAAOW,OAAjDhD,GAD6BoE,EACjCnI,GADiCmI,EAC7BpE,OAAOE,EADsBkE,EACtBlE,OAAOI,EADe8D,EACf9D,KAAKF,EADUgE,EACVhE,IAAII,EADM4D,EACN5D,QAASD,EADH6D,EACG7D,KAU1C,OATAoB,GAAWvC,MACPnD,GAAG,EACH+D,MAAMA,EACNE,OAAOA,EACPI,KAAKA,EACLF,IAAIA,EACJI,QAAQA,EACRD,MAAMA,IAEH,GAAAa,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEtG,GAAG,OAGN,SAIPoD,EAAK4C,MAAM,iBAAiBC,MAAM,SAAAG,GAAU,GACpCpG,GAAOoG,EAAOW,OAAO/G,GAArBA,GACFwH,QAQJ,OAPA9B,GAAW0C,QAAS,SAACF,EAAEhF,GACrB,GAAIgF,EAAElI,IAAMA,EAEV,MADAwH,GAAQtE,GACD,IAGXwC,EAAW2C,OAAOb,EAAM,GACjB,GAAArC,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEtG,GAAG,OAGN,SAKPoD,EAAK4C,MAAM,qBAAqBC,MAAM,SAAAG,GAC3BA,EAAOW,OAAO/G,EAEvB,OAAO,IAAAmF,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACE9D,QAAQmD,OAGX,SAIPvC,EAAK4C,MAAM,yBAAyBC,MAAM,SAAAG,GAGxC,MADAT,GAAWS,EAAOW,OAAOvE,QAClB,GAAA2C,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACE9D,QAAQmD,OAGX,SAMPvC,EAAK4C,MAAM,0BAA0BC,MAAM,SAAAG,GAChCA,EAAOW,OAAOnC,OACvB,OAAO,IAAAO,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEhE,YAAYsD,OAGf,SAKTxC,EAAK4C,MAAM,2BAA2BC,MAAM,SAAAG,GAAU,GAAAkC,GACpBlC,EAAOW,OAAjC/G,EAD8CsI,EAC9CtI,GAAW+D,GADmCuE,EAC3C1D,QAD2C0D,EACnCvE,OAAMM,EAD6BiE,EAC7BjE,IAOvB,OANAuB,GAASwC,QAAS,SAAAJ,GACbA,EAAIhI,IAAMA,IACXgI,EAAIjE,MAAQA,EACZiE,EAAI3D,KAAOA,KAGR,GAAAc,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAKTnF,EAAK4C,MAAM,0BAA0BC,MAAM,SAAAG,GAAU,GAAAoC,GACnBpC,EAAOW,OAAjC/G,EAD6CwI,EAC7CxI,GAAG4E,EAD0C4D,EAC1C5D,QAAQb,EADkCyE,EAClCzE,MAAMM,EAD4BmE,EAC5BnE,IAOvB,OANAuB,GAASzC,MACNnD,GAAGA,EAAK,EACR4E,QAAQA,EACRb,MAAMA,EACNM,KAAKA,IAED,GAAAc,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAKTnF,EAAK4C,MAAM,6BAA6BC,MAAM,SAAAG,GAAU,GAAAqC,GACnCrC,EAAOW,OAArB/G,EADiDyI,EACjDzI,GACDwH,GAFkDiB,EAC9C7D,YACJ4C,GAOJ,OANA5B,GAASwC,QAAS,SAACJ,EAAI9E,GAClB8E,EAAIhI,IAAMA,IACXwH,EAAQtE,KAGZ0C,EAASyC,OAAOb,EAAM,GACf,GAAArC,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAKTnF,EAAK4C,MAAM,8BAA8BC,MAAM,SAAAG,GACpCA,EAAOW,OAAO/G,GACToG,EAAOW,OAAOnC,OAC5B,OAAO,IAAAO,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEoC,iBAAiB7C,OAGpB,SAKTzC,EAAK4C,MAAM,+BAA+BC,MAAM,SAAAG,GAAU,GAAAuC,GACTvC,EAAOW,OAAhD/G,EADkD2I,EAClD3I,GAAG4I,EAD+CD,EAC/CC,KAAK7E,EAD0C4E,EAC1C5E,MAAMM,EADoCsE,EACpCtE,KAAKG,EAD+BmE,EAC/BnE,IAAIM,EAD2B6D,EAC3B7D,MAAMtC,EADqBmG,EACrBnG,OAWnC,OAVAqD,GAAauC,QAAS,SAAAJ,GACjBA,EAAIhI,IAAMA,IACXgI,EAAIY,KAAOA,EACXZ,EAAIjE,MAAQA,EACZiE,EAAI3D,KAAOA,EACX2D,EAAIxD,IAAMA,EACVwD,EAAIlD,MAAQA,EACZkD,EAAIxF,QAAUA,KAGX,GAAA2C,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAKTnF,EAAK4C,MAAM,8BAA8BC,MAAM,SAAAG,GAAU,GAAAyC,GACRzC,EAAOW,OAAhD/G,EADiD6I,EACjD7I,GAAG4I,EAD8CC,EAC9CD,KAAK7E,EADyC8E,EACzC9E,MAAMM,EADmCwE,EACnCxE,KAAKG,EAD8BqE,EAC9BrE,IAAIM,EAD0B+D,EAC1B/D,MAAMtC,EADoBqG,EACpBrG,OAUnC,OATAqD,GAAa1C,MACVnD,GAAGA,EAAK,EACR4I,KAAKA,EACL7E,MAAMA,EACNM,KAAKA,EACLG,IAAIA,EACJM,MAAMA,EACNtC,QAAQA,IAEJ,GAAA2C,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAKTnF,EAAK4C,MAAM,iCAAiCC,MAAM,SAAAG,GAAU,GAAA0C,GACvC1C,EAAOW,OAArB/G,EADqD8I,EACrD9I,GACDwH,GAFsDsB,EAClDlE,YACJ4C,GAOJ,OANA3B,GAAauC,QAAS,SAACJ,EAAI9E,GACtB8E,EAAIhI,IAAMA,IACXwH,EAAQtE,KAGZ2C,EAAawC,OAAOb,EAAM,GACnB,GAAArC,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAMTnF,EAAK4C,MAAM,2BAA2BC,MAAM,SAAAG,GACjCA,EAAOW,OAAO/G,GACToG,EAAOW,OAAOnC,OAC5B,OAAO,IAAAO,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEjE,SAASyD,OAGZ,SAKT1C,EAAK4C,MAAM,4BAA4BC,MAAM,SAAAG,GAAU,GAAA2C,GACN3C,EAAOW,OAAhD/G,EAD+C+I,EAC/C/I,GAAG4I,EAD4CG,EAC5CH,KAAK7E,EADuCgF,EACvChF,MAAMM,EADiC0E,EACjC1E,KAAKG,EAD4BuE,EAC5BvE,IAAIM,EADwBiE,EACxBjE,MAAMtC,EADkBuG,EAClBvG,OAWnC,OAVAsD,GAAUsC,QAAS,SAAAJ,GACdA,EAAIhI,IAAMA,IACXgI,EAAIY,KAAOA,EACXZ,EAAIjE,MAAQA,EACZiE,EAAI3D,KAAOA,EACX2D,EAAIxD,IAAMA,EACVwD,EAAIlD,MAAQA,EACZkD,EAAIxF,QAAUA,KAGX,GAAA2C,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAKTnF,EAAK4C,MAAM,2BAA2BC,MAAM,SAAAG,GAAU,GAAA4C,GACL5C,EAAOW,OAAhD/G,EAD8CgJ,EAC9ChJ,GAAG4I,EAD2CI,EAC3CJ,KAAK7E,EADsCiF,EACtCjF,MAAMM,EADgC2E,EAChC3E,KAAKG,EAD2BwE,EAC3BxE,IAAIM,EADuBkE,EACvBlE,MAAMtC,EADiBwG,EACjBxG,OAUnC,OATAsD,GAAU3C,MACPnD,GAAGA,EAAK,EACR4I,KAAKA,EACL7E,MAAMA,EACNM,KAAKA,EACLG,IAAIA,EACJM,MAAMA,EACNtC,QAAQA,IAEJ,GAAA2C,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAKTnF,EAAK4C,MAAM,8BAA8BC,MAAM,SAAAG,GAAU,GAAA6C,GACpC7C,EAAOW,OAArB/G,EADkDiJ,EAClDjJ,GACDwH,GAFmDyB,EAC/CrE,YACJ4C,GAOJ,OANA1B,GAAUsC,QAAS,SAACJ,EAAI9E,GACnB8E,EAAIhI,IAAMA,IACXwH,EAAQtE,KAGZ4C,EAAUuC,OAAOb,EAAM,GAChB,GAAArC,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAOTnF,EAAK4C,MAAM,wBAAwBC,MAAM,SAAAG,GACvC,MAAO,IAAAjB,GAAAtH,QAAY,SAAC0I,EAASC,GAC3BE,WAAW,WACPH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACElE,WAAW2D,OAGd,SAKT3C,EAAK4C,MAAM,yBAAyBC,MAAM,SAAAG,GAAU,GAAA8C,GACtB9C,EAAOW,OAA7B/G,EAD4CkJ,EAC5ClJ,GAAG+D,EADyCmF,EACzCnF,MAAMS,EADmC0E,EACnC1E,IAAIE,EAD+BwE,EAC/BxE,IAQnB,OAPAqB,GAAYqC,QAAS,SAAAJ,GAChBA,EAAIhI,IAAMA,IACXgI,EAAIjE,MAAQA,EACZiE,EAAIxD,IAAMA,EACVwD,EAAIlD,MAAQJ,KAGT,GAAAS,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAMTnF,EAAK4C,MAAM,2BAA2BC,MAAM,SAAAG,GAAU,GAAA+C,GACxB/C,EAAOW,OAA7B/G,EAD8CmJ,EAC9CnJ,GACFwH,GAFgD2B,EAC3CpF,MAD2CoF,EACrC3E,IADqC2E,EACjCzE,SACf8C,GAOJ,OANAzB,GAAYqC,QAAS,SAACJ,EAAI9E,GACrB8E,EAAIhI,IAAMA,IACXwH,EAAQtE,KAGZ6C,EAAYsC,OAAOb,EAAM,GAClB,GAAArC,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,SAKTnF,EAAK4C,MAAM,wBAAwBC,MAAM,SAAAG,GAAU,GAAAgD,GACrBhD,EAAOW,OAA7B/G,EAD2CoJ,EAC3CpJ,GAAG+D,EADwCqF,EACxCrF,MAAMS,EADkC4E,EAClC5E,IAAIE,EAD8B0E,EAC9B1E,IAOnB,OANAqB,GAAY5C,MACTnD,GAAGA,EAAK,EACR+D,MAAMA,EACNS,IAAIA,EACJE,KAAKA,IAED,GAAAS,GAAAtH,QAAY,SAAC0I,EAASC,GACzBE,WAAW,WACTH,GAAS,KACPO,KAAM,IACNZ,IAAK,OACLI,MACEiC,KAAK,YAGR,YRmdPc,IACA,SAAUtM,EAAQC,EAASC,GAEjC,YAGAK,QAAOC,eAAeP,EAAS,cAC3BQ,OAAO,GSvlCEsG,aAAY,SAAAwF,IACrBC,EADmCD,EAAZC,QAChB,cAEEC,YAAY,SAAAC,IACrBF,EADmCE,EAAZF,QAChB,eTkmCLG,IACA,SAAU3M,EAAQC,EAASC,GAEjC,YAGAK,QAAOC,eAAeP,EAAS,cAC3BQ,OAAO,GU7mCEmM,YAAW,SAAA1K,GACpB,MAAOA,GAAMC,UVonCd","file":"static/js/app.6c1bb93f2d7ee34cd447.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 210:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(289)\n\nvar Component = __webpack_require__(284)(\n  /* script */\n  __webpack_require__(532),\n  /* template */\n  __webpack_require__(285),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 211:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 212:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 215:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mock = __webpack_require__(535);\n\nvar _mock2 = _interopRequireDefault(_mock);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _mock2.default;\n\n/***/ }),\n\n/***/ 216:\n/***/ (function(module, exports) {\n\nthrow new Error(\"Module build failed: SyntaxError: E:/waibao/admin/src/routes.js: Unexpected token (76:4)\\n\\n  74 |     },\\n  75 |     {\\n> 76 |     {\\n     |     ^\\n  77 |         path: '/',\\n  78 |         component: Home,\\n  79 |         name: '',\\n\");\n\n/***/ }),\n\n/***/ 217:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vue = __webpack_require__(19);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _vuex = __webpack_require__(139);\n\nvar _vuex2 = _interopRequireDefault(_vuex);\n\nvar _actions = __webpack_require__(536);\n\nvar actions = _interopRequireWildcard(_actions);\n\nvar _getters = __webpack_require__(537);\n\nvar getters = _interopRequireWildcard(_getters);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_vue2.default.use(_vuex2.default);\n\nvar state = {\n    count: 10\n};\n\nvar mutations = {\n    INCREMENT: function INCREMENT(state) {\n        state.count++;\n    },\n    DECREMENT: function DECREMENT(state) {\n        state.count--;\n    }\n};\n\nexports.default = new _vuex2.default.Store({\n    actions: actions,\n    getters: getters,\n    state: state,\n    mutations: mutations\n});\n\n/***/ }),\n\n/***/ 285:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('transition', {\n    attrs: {\n      \"name\": \"fade\",\n      \"mode\": \"out-in\"\n    }\n  }, [_c('router-view')], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 289:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 532:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = {\n\tname: 'app',\n\tcomponents: {}\n};\n\n/***/ }),\n\n/***/ 533:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _babelPolyfill = __webpack_require__(214);\n\nvar _babelPolyfill2 = _interopRequireDefault(_babelPolyfill);\n\nvar _vue = __webpack_require__(19);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _App = __webpack_require__(210);\n\nvar _App2 = _interopRequireDefault(_App);\n\nvar _elementUi = __webpack_require__(209);\n\nvar _elementUi2 = _interopRequireDefault(_elementUi);\n\n__webpack_require__(211);\n\nvar _vueRouter = __webpack_require__(213);\n\nvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\nvar _store = __webpack_require__(217);\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _vuex = __webpack_require__(139);\n\nvar _vuex2 = _interopRequireDefault(_vuex);\n\nvar _routes = __webpack_require__(216);\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _mock = __webpack_require__(215);\n\nvar _mock2 = _interopRequireDefault(_mock);\n\n__webpack_require__(212);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_mock2.default.bootstrap();\n\n\n_vue2.default.use(_elementUi2.default);\n_vue2.default.use(_vueRouter2.default);\n_vue2.default.use(_vuex2.default);\n\nvar router = new _vueRouter2.default({\n  routes: _routes2.default\n});\n\nrouter.beforeEach(function (to, from, next) {\n  if (to.path == '/login') {\n    sessionStorage.removeItem('user');\n  }\n  var user = JSON.parse(sessionStorage.getItem('user'));\n  if (!user && to.path != '/login') {\n    next({ path: '/login' });\n  } else {\n    next();\n  }\n});\n\nnew _vue2.default({\n  router: router,\n  store: _store2.default,\n\n  render: function render(h) {\n    return h(_App2.default);\n  }\n}).$mount('#app');\n\n/***/ }),\n\n/***/ 534:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bannerList = exports.freeList = exports.chapterList = exports.chapter = exports.article = exports.classList = exports.Users = exports.LoginUsers = undefined;\n\nvar _mockjs = __webpack_require__(236);\n\nvar _mockjs2 = _interopRequireDefault(_mockjs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LoginUsers = [{\n  id: 1,\n  username: 'admin',\n  password: '123456',\n  avatar: 'https://raw.githubusercontent.com/taylorchen709/markdown-images/master/vueadmin/user.png',\n  name: '张某某'\n}];\n\nvar Users = [];\n\nfor (var i = 0; i < 86; i++) {\n  Users.push(_mockjs2.default.mock({\n    id: _mockjs2.default.Random.guid(),\n    name: _mockjs2.default.Random.cname(),\n    addr: _mockjs2.default.mock('@county(true)'),\n    'age|18-60': 1,\n    birth: _mockjs2.default.Random.date(),\n    sex: _mockjs2.default.Random.integer(0, 1)\n  }));\n}\n\nvar classList = [];\n\nfor (var _i = 0; _i < 3; _i++) {\n  classList.push(_mockjs2.default.mock({\n    id: _mockjs2.default.Random.increment(),\n    title: _mockjs2.default.Random.ctitle(),\n    banner: _mockjs2.default.Random.image('200x100', '#ffffff'),\n    tag: _mockjs2.default.Random.cword(3),\n    desc: _mockjs2.default.Random.cword(10),\n    prize: _mockjs2.default.Random.integer(1, 200),\n    peoples: _mockjs2.default.Random.integer(1000, 100000)\n  }));\n}\n\nvar article = [];\n\nfor (var _i2 = 0; _i2 < 3; _i2++) {\n  article.push(_mockjs2.default.mock({\n    title: _mockjs2.default.Random.ctitle(),\n    img: _mockjs2.default.Random.image('200x100', '#ffffff'),\n    desc: _mockjs2.default.Random.cparagraph(),\n    link: _mockjs2.default.Random.url('http')\n  }));\n}\n\n\nvar chapter = [];\n\nfor (var _i3 = 0; _i3 < 3; _i3++) {\n  chapter.push(_mockjs2.default.mock({\n    id: _mockjs2.default.Random.increment(),\n    classId: 1,\n    title: _mockjs2.default.Random.ctitle(),\n    desc: _mockjs2.default.Random.cparagraph()\n  }));\n}\n\nvar chapterList = [];\n\nfor (var _i4 = 0; _i4 < 3; _i4++) {\n  chapterList.push(_mockjs2.default.mock({\n    id: _mockjs2.default.Random.increment(),\n    'type|1-2': 1,\n    title: _mockjs2.default.Random.ctitle(),\n    desc: _mockjs2.default.Random.cword(10),\n    img: _mockjs2.default.Random.image('200x100', '#ffffff'),\n    video: _mockjs2.default.Random.url('http'),\n    article: _mockjs2.default.Random.cparagraph()\n  }));\n}\n\nvar freeList = [];\n\nfor (var _i5 = 0; _i5 < 3; _i5++) {\n  freeList.push(_mockjs2.default.mock({\n    id: _mockjs2.default.Random.increment(),\n    'type|1-2': 1,\n    title: _mockjs2.default.Random.ctitle(),\n    desc: _mockjs2.default.Random.cword(10),\n    img: _mockjs2.default.Random.image('200x100', '#ffffff'),\n    video: _mockjs2.default.Random.url('http'),\n    article: _mockjs2.default.Random.cparagraph()\n  }));\n}\n\nvar bannerList = [];\n\nfor (var _i6 = 0; _i6 < 3; _i6++) {\n  bannerList.push(_mockjs2.default.mock({\n    id: _mockjs2.default.Random.increment(),\n    title: _mockjs2.default.Random.ctitle(),\n    img: _mockjs2.default.Random.image('200x100', '#ffffff'),\n    link: _mockjs2.default.Random.url('http')\n  }));\n}\n\nexports.LoginUsers = LoginUsers;\nexports.Users = Users;\nexports.classList = classList;\nexports.article = article;\nexports.chapter = chapter;\nexports.chapterList = chapterList;\nexports.freeList = freeList;\nexports.bannerList = bannerList;\n\n/***/ }),\n\n/***/ 535:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _stringify = __webpack_require__(527);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _promise = __webpack_require__(529);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _axios = __webpack_require__(141);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _axiosMockAdapter = __webpack_require__(282);\n\nvar _axiosMockAdapter2 = _interopRequireDefault(_axiosMockAdapter);\n\nvar _user = __webpack_require__(534);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _Users = _user.Users;\nvar _classList = _user.classList;\nvar _article = _user.article;\nvar _chapter = _user.chapter;\nvar _chapterList = _user.chapterList;\nvar _freeList = _user.freeList;\nvar _bannerList = _user.bannerList;\n\nexports.default = {\n  bootstrap: function bootstrap() {\n    var mock = new _axiosMockAdapter2.default(_axios2.default);\n\n    mock.onGet('/success').reply(200, {\n      msg: 'success'\n    });\n\n    mock.onGet('/error').reply(500, {\n      msg: 'failure'\n    });\n\n    mock.onPost('/login').reply(function (config) {\n      var _JSON$parse = JSON.parse(config.data),\n          username = _JSON$parse.username,\n          password = _JSON$parse.password;\n\n      return new _promise2.default(function (resolve, reject) {\n        var user = null;\n        setTimeout(function () {\n          var hasUser = _user.LoginUsers.some(function (u) {\n            if (u.username === username && u.password === password) {\n              user = JSON.parse((0, _stringify2.default)(u));\n              user.password = undefined;\n              return true;\n            }\n          });\n\n          if (hasUser) {\n            resolve([200, { code: 200, msg: '请求成功', user: user }]);\n          } else {\n            resolve([200, { code: 500, msg: '账号或密码错误' }]);\n          }\n        }, 1000);\n      });\n    });\n\n    mock.onGet('/user/list').reply(function (config) {\n      var name = config.params.name;\n\n      var mockUsers = _Users.filter(function (user) {\n        if (name && user.name.indexOf(name) == -1) return false;\n        return true;\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            users: mockUsers\n          }]);\n        }, 1000);\n      });\n    });\n\n    mock.onGet('/user/listpage').reply(function (config) {\n      var _config$params = config.params,\n          page = _config$params.page,\n          name = _config$params.name;\n\n      var mockUsers = _Users.filter(function (user) {\n        if (name && user.name.indexOf(name) == -1) return false;\n        return true;\n      });\n      var total = mockUsers.length;\n      mockUsers = mockUsers.filter(function (u, index) {\n        return index < 20 * page && index >= 20 * (page - 1);\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            total: total,\n            users: mockUsers\n          }]);\n        }, 1000);\n      });\n    });\n\n    mock.onGet('/user/remove').reply(function (config) {\n      var id = config.params.id;\n\n      _Users = _Users.filter(function (u) {\n        return u.id !== id;\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '删除成功'\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/user/batchremove').reply(function (config) {\n      var ids = config.params.ids;\n\n      ids = ids.split(',');\n      _Users = _Users.filter(function (u) {\n        return !ids.includes(u.id);\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '删除成功'\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/user/edit').reply(function (config) {\n      var _config$params2 = config.params,\n          id = _config$params2.id,\n          name = _config$params2.name,\n          addr = _config$params2.addr,\n          age = _config$params2.age,\n          birth = _config$params2.birth,\n          sex = _config$params2.sex;\n\n      _Users.some(function (u) {\n        if (u.id === id) {\n          u.name = name;\n          u.addr = addr;\n          u.age = age;\n          u.birth = birth;\n          u.sex = sex;\n          return true;\n        }\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '编辑成功'\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/user/add').reply(function (config) {\n      var _config$params3 = config.params,\n          name = _config$params3.name,\n          addr = _config$params3.addr,\n          age = _config$params3.age,\n          birth = _config$params3.birth,\n          sex = _config$params3.sex;\n\n      _Users.push({\n        name: name,\n        addr: addr,\n        age: age,\n        birth: birth,\n        sex: sex\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '新增成功'\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/list').reply(function (config) {\n      var title = config.params.title;\n\n      var mockClasses = _classList.filter(function (val) {\n        if (title && val.title.indexOf(title) == -1) return false;\n        return true;\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            classList: mockClasses\n          }]);\n        }, 1000);\n      });\n    });\n\n    mock.onGet('/class/edit').reply(function (config) {\n      var _config$params4 = config.params,\n          id = _config$params4.id,\n          title = _config$params4.title,\n          banner = _config$params4.banner,\n          desc = _config$params4.desc,\n          tag = _config$params4.tag,\n          peoples = _config$params4.peoples,\n          prize = _config$params4.prize;\n\n      _classList.some(function (c) {\n        if (c.id === id) {\n          c.title = title;\n          c.banner = banner;\n          c.desc = desc;\n          c.tag = tag;\n          c.peoples = peoples;\n          c.prize = prize;\n          return true;\n        }\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '编辑成功'\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/add').reply(function (config) {\n      var _config$params5 = config.params,\n          id = _config$params5.id,\n          title = _config$params5.title,\n          banner = _config$params5.banner,\n          desc = _config$params5.desc,\n          tag = _config$params5.tag,\n          peoples = _config$params5.peoples,\n          prize = _config$params5.prize;\n\n      _classList.push({\n        id: 4,\n        title: title,\n        banner: banner,\n        desc: desc,\n        tag: tag,\n        peoples: peoples,\n        prize: prize\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '编辑成功',\n            data: {\n              id: 4\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/remove').reply(function (config) {\n      var id = config.params.id.id;\n\n      var index = void 0;\n      _classList.forEach(function (c, i) {\n        if (c.id == id) {\n          index = i;\n          return false;\n        }\n      });\n      _classList.splice(index, 1);\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '删除成功',\n            data: {\n              id: 4\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/classIndex').reply(function (config) {\n      var id = config.params.id;\n\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '删除成功',\n            data: {\n              article: _article\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/addClassDetail').reply(function (config) {\n      _article = config.params.article;\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '添加成功',\n            data: {\n              article: _article\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/getClassChapter').reply(function (config) {\n      var id = config.params.classId;\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '添加成功',\n            data: {\n              chapterList: _chapter\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/editClassChapter').reply(function (config) {\n      var _config$params6 = config.params,\n          id = _config$params6.id,\n          classId = _config$params6.classId,\n          title = _config$params6.title,\n          desc = _config$params6.desc;\n\n      _chapter.forEach(function (val) {\n        if (val.id == id) {\n          val.title = title;\n          val.desc = desc;\n        }\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '修改成功',\n            data: {\n              text: '修改成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/addClassChapter').reply(function (config) {\n      var _config$params7 = config.params,\n          id = _config$params7.id,\n          classId = _config$params7.classId,\n          title = _config$params7.title,\n          desc = _config$params7.desc;\n\n      _chapter.push({\n        id: id + 1,\n        classId: classId,\n        title: title,\n        desc: desc\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '添加成功',\n            data: {\n              text: '添加成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/removeClassChapter').reply(function (config) {\n      var _config$params8 = config.params,\n          id = _config$params8.id,\n          classId = _config$params8.classId;\n\n      var index = void 0;\n      _chapter.forEach(function (val, i) {\n        if (val.id == id) {\n          index = i;\n        }\n      });\n      _chapter.splice(index, 1);\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '删除成功',\n            data: {\n              text: '删除成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/getClassChapterList').reply(function (config) {\n      var id = config.params.id;\n      var classId = config.params.classId;\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '添加成功',\n            data: {\n              classChapterList: _chapterList\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/editClassChapterList').reply(function (config) {\n      var _config$params9 = config.params,\n          id = _config$params9.id,\n          type = _config$params9.type,\n          title = _config$params9.title,\n          desc = _config$params9.desc,\n          img = _config$params9.img,\n          video = _config$params9.video,\n          article = _config$params9.article;\n\n      _chapterList.forEach(function (val) {\n        if (val.id == id) {\n          val.type = type;\n          val.title = title;\n          val.desc = desc;\n          val.img = img;\n          val.video = video;\n          val.article = article;\n        }\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '修改成功',\n            data: {\n              text: '修改成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/addClassChapterList').reply(function (config) {\n      var _config$params10 = config.params,\n          id = _config$params10.id,\n          type = _config$params10.type,\n          title = _config$params10.title,\n          desc = _config$params10.desc,\n          img = _config$params10.img,\n          video = _config$params10.video,\n          article = _config$params10.article;\n\n      _chapterList.push({\n        id: id + 1,\n        type: type,\n        title: title,\n        desc: desc,\n        img: img,\n        video: video,\n        article: article\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '添加成功',\n            data: {\n              text: '添加成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/removeClassChapterList').reply(function (config) {\n      var _config$params11 = config.params,\n          id = _config$params11.id,\n          classId = _config$params11.classId;\n\n      var index = void 0;\n      _chapterList.forEach(function (val, i) {\n        if (val.id == id) {\n          index = i;\n        }\n      });\n      _chapterList.splice(index, 1);\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '删除成功',\n            data: {\n              text: '删除成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/getClassFreeList').reply(function (config) {\n      var id = config.params.id;\n      var classId = config.params.classId;\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '添加成功',\n            data: {\n              freeList: _freeList\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/editClassFreeList').reply(function (config) {\n      var _config$params12 = config.params,\n          id = _config$params12.id,\n          type = _config$params12.type,\n          title = _config$params12.title,\n          desc = _config$params12.desc,\n          img = _config$params12.img,\n          video = _config$params12.video,\n          article = _config$params12.article;\n\n      _freeList.forEach(function (val) {\n        if (val.id == id) {\n          val.type = type;\n          val.title = title;\n          val.desc = desc;\n          val.img = img;\n          val.video = video;\n          val.article = article;\n        }\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '修改成功',\n            data: {\n              text: '修改成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/addClassFreeList').reply(function (config) {\n      var _config$params13 = config.params,\n          id = _config$params13.id,\n          type = _config$params13.type,\n          title = _config$params13.title,\n          desc = _config$params13.desc,\n          img = _config$params13.img,\n          video = _config$params13.video,\n          article = _config$params13.article;\n\n      _freeList.push({\n        id: id + 1,\n        type: type,\n        title: title,\n        desc: desc,\n        img: img,\n        video: video,\n        article: article\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '添加成功',\n            data: {\n              text: '添加成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/removeClassFreeList').reply(function (config) {\n      var _config$params14 = config.params,\n          id = _config$params14.id,\n          classId = _config$params14.classId;\n\n      var index = void 0;\n      _freeList.forEach(function (val, i) {\n        if (val.id == id) {\n          index = i;\n        }\n      });\n      _freeList.splice(index, 1);\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '删除成功',\n            data: {\n              text: '删除成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/getBannerList').reply(function (config) {\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '请求成功',\n            data: {\n              bannerList: _bannerList\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/editBannerList').reply(function (config) {\n      var _config$params15 = config.params,\n          id = _config$params15.id,\n          title = _config$params15.title,\n          img = _config$params15.img,\n          link = _config$params15.link;\n\n      _bannerList.forEach(function (val) {\n        if (val.id == id) {\n          val.title = title;\n          val.img = img;\n          val.video = link;\n        }\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '修改成功',\n            data: {\n              text: '修改成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/removeBannerList').reply(function (config) {\n      var _config$params16 = config.params,\n          id = _config$params16.id,\n          title = _config$params16.title,\n          img = _config$params16.img,\n          link = _config$params16.link;\n\n      var index = void 0;\n      _bannerList.forEach(function (val, i) {\n        if (val.id == id) {\n          index = i;\n        }\n      });\n      _bannerList.splice(index, 1);\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '删除成功',\n            data: {\n              text: '删除成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n\n    mock.onGet('/class/addBannerList').reply(function (config) {\n      var _config$params17 = config.params,\n          id = _config$params17.id,\n          title = _config$params17.title,\n          img = _config$params17.img,\n          link = _config$params17.link;\n\n      _bannerList.push({\n        id: id + 1,\n        title: title,\n        img: img,\n        link: link\n      });\n      return new _promise2.default(function (resolve, reject) {\n        setTimeout(function () {\n          resolve([200, {\n            code: 200,\n            msg: '添加成功',\n            data: {\n              text: '添加成功'\n            }\n          }]);\n        }, 500);\n      });\n    });\n  }\n};\n\n/***/ }),\n\n/***/ 536:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar increment = exports.increment = function increment(_ref) {\n    var commit = _ref.commit;\n\n    commit('INCREMENT');\n};\nvar decrement = exports.decrement = function decrement(_ref2) {\n    var commit = _ref2.commit;\n\n    commit('DECREMENT');\n};\n\n/***/ }),\n\n/***/ 537:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar getCount = exports.getCount = function getCount(state) {\n    return state.count;\n};\n\n/***/ })\n\n},[533]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.6c1bb93f2d7ee34cd447.js","\n/* styles */\nrequire(\"!!../node_modules/.2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../node_modules/.11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-20c9a2f8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../node_modules/.11.3.4@vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n\nvar Component = require(\"!../node_modules/.11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/.11.3.4@vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  require(\"!!../node_modules/.11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-20c9a2f8\\\"}!../node_modules/.11.3.4@vue-loader/lib/selector?type=template&index=0!./App.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 210\n// module chunks = 1","import mock from './mock';\r\n\r\nexport default mock;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/mock/index.js","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as actions from './actions'\r\nimport * as getters from './getters'\r\n\r\nVue.use(Vuex)\r\n\r\n// 应用初始状态\r\nconst state = {\r\n    count: 10\r\n}\r\n\r\n// 定义所需的 mutations\r\nconst mutations = {\r\n    INCREMENT(state) {\r\n        state.count++\r\n    },\r\n    DECREMENT(state) {\r\n        state.count--\r\n    }\r\n}\r\n\r\n// 创建 store 实例\r\nexport default new Vuex.Store({\r\n    actions,\r\n    getters,\r\n    state,\r\n    mutations\r\n})\n\n\n// WEBPACK FOOTER //\n// ./src/vuex/store.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('transition', {\n    attrs: {\n      \"name\": \"fade\",\n      \"mode\": \"out-in\"\n    }\n  }, [_c('router-view')], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-20c9a2f8\"}!./~/.11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 285\n// module chunks = 1","<template>\r\n\t<div id=\"app\">\r\n\t\t<transition name=\"fade\"\r\n\t\t            mode=\"out-in\">\r\n\t\t\t<router-view></router-view>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\tname: 'app',\r\n\tcomponents: {\r\n\t}\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nbody {\r\n\tmargin: 0px;\r\n\tpadding: 0px;\r\n\t/*background: url(assets/bg1.jpg) center !important;\r\n\t\tbackground-size: cover;*/\r\n\t// background: #1F2D3D;\r\n\tfont-family: Helvetica Neue, Helvetica, PingFang SC, Hiragino Sans GB, Microsoft YaHei, SimSun, sans-serif;\r\n\tfont-size: 14px;\r\n\t-webkit-font-smoothing: antialiased;\r\n}\r\n\r\n#app {\r\n\tposition: absolute;\r\n\ttop: 0px;\r\n\tbottom: 0px;\r\n\twidth: 100%;\r\n}\r\n\r\n.el-submenu [class^=fa] {\r\n\tvertical-align: baseline;\r\n\tmargin-right: 10px;\r\n}\r\n\r\n.el-menu-item [class^=fa] {\r\n\tvertical-align: baseline;\r\n\tmargin-right: 10px;\r\n}\r\n\r\n.toolbar {\r\n\tbackground: #f2f2f2;\r\n\tpadding: 10px;\r\n\t//border:1px solid #dfe6ec;\r\n\tmargin: 10px 0px;\r\n\t.el-form-item {\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n\ttransition: all .2s ease;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-active {\r\n\topacity: 0;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// App.vue?49b65c92","import babelpolyfill from 'babel-polyfill'\r\nimport Vue from 'vue'\r\nimport App from './App'\r\nimport ElementUI from 'element-ui'\r\nimport 'element-ui/lib/theme-default/index.css'\r\n//import './assets/theme/theme-green/index.css'\r\nimport VueRouter from 'vue-router'\r\nimport store from './vuex/store'\r\nimport Vuex from 'vuex'\r\n//import NProgress from 'nprogress'\r\n//import 'nprogress/nprogress.css'\r\nimport routes from './routes'\r\nimport Mock from './mock'\r\nMock.bootstrap();\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n\r\nVue.use(ElementUI)\r\nVue.use(VueRouter)\r\nVue.use(Vuex)\r\n\r\n//NProgress.configure({ showSpinner: false });\r\n\r\nconst router = new VueRouter({\r\n  routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  //NProgress.start();\r\n  if (to.path == '/login') {\r\n    sessionStorage.removeItem('user');\r\n  }\r\n  let user = JSON.parse(sessionStorage.getItem('user'));\r\n  if (!user && to.path != '/login') {\r\n    next({ path: '/login' })\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\n//router.afterEach(transition => {\r\n//NProgress.done();\r\n//});\r\n\r\nnew Vue({\r\n  //el: '#app',\r\n  //template: '<App/>',\r\n  router,\r\n  store,\r\n  //components: { App }\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import Mock from 'mockjs';\r\nconst LoginUsers = [\r\n  {\r\n    id: 1,\r\n    username: 'admin',\r\n    password: '123456',\r\n    avatar: 'https://raw.githubusercontent.com/taylorchen709/markdown-images/master/vueadmin/user.png',\r\n    name: '张某某'\r\n  }\r\n];\r\n\r\n// 用户信息\r\nconst Users = [];\r\n\r\nfor (let i = 0; i < 86; i++) {\r\n  Users.push(Mock.mock({\r\n    id: Mock.Random.guid(),\r\n    name: Mock.Random.cname(),\r\n    addr: Mock.mock('@county(true)'),\r\n    'age|18-60': 1,\r\n    birth: Mock.Random.date(),\r\n    sex: Mock.Random.integer(0, 1)\r\n  }));\r\n}\r\n\r\n// 课程列表\r\nconst classList = [];\r\n\r\nfor (let i = 0; i < 3; i++) {\r\n  classList.push(Mock.mock({\r\n    id: Mock.Random.increment(),\r\n    title: Mock.Random.ctitle(),\r\n    banner: Mock.Random.image('200x100','#ffffff'),\r\n    tag:Mock.Random.cword(3),\r\n    desc:Mock.Random.cword(10),\r\n    prize: Mock.Random.integer(1, 200),\r\n    peoples:Mock.Random.integer(1000,100000)\r\n  }));\r\n}\r\n\r\n// 课程主页详情\r\nconst article = [];\r\n\r\nfor (let i = 0; i < 3; i++) {\r\n  article.push(Mock.mock({\r\n    title: Mock.Random.ctitle(),\r\n    img: Mock.Random.image('200x100','#ffffff'),\r\n    desc:Mock.Random.cparagraph(),\r\n    link:Mock.Random.url('http'),\r\n  }));\r\n}\r\n// 课程章节\r\n\r\nconst chapter = [];\r\n\r\nfor (let i = 0; i < 3; i++) {\r\n  chapter.push(Mock.mock({\r\n    id:Mock.Random.increment(),\r\n    classId:1,\r\n    title: Mock.Random.ctitle(),\r\n    desc:Mock.Random.cparagraph(),\r\n  }));\r\n}\r\n\r\n// 章节详情列表\r\n\r\nconst chapterList = [];\r\n\r\nfor (let i = 0; i < 3; i++){\r\n  chapterList.push(Mock.mock({\r\n    id:Mock.Random.increment(),\r\n    'type|1-2':1,\r\n    title:Mock.Random.ctitle(),\r\n    desc:Mock.Random.cword(10),\r\n    img:Mock.Random.image('200x100','#ffffff'),\r\n    video:Mock.Random.url('http'),\r\n    article:Mock.Random.cparagraph(),\r\n  }))\r\n}\r\n\r\n// 章节详情列表\r\n\r\nconst freeList = [];\r\n\r\nfor (let i = 0; i < 3; i++){\r\n  freeList.push(Mock.mock({\r\n    id:Mock.Random.increment(),\r\n    'type|1-2':1,\r\n    title:Mock.Random.ctitle(),\r\n    desc:Mock.Random.cword(10),\r\n    img:Mock.Random.image('200x100','#ffffff'),\r\n    video:Mock.Random.url('http'),\r\n    article:Mock.Random.cparagraph(),\r\n  }))\r\n}\r\n\r\n// 轮播图列表\r\n\r\nconst bannerList = [];\r\n\r\nfor (let i = 0; i < 3; i++){\r\n  bannerList.push(Mock.mock({\r\n    id:Mock.Random.increment(),\r\n    title:Mock.Random.ctitle(),\r\n    img:Mock.Random.image('200x100','#ffffff'),\r\n    link:Mock.Random.url('http'),\r\n  }))\r\n}\r\n\r\nexport { LoginUsers, Users, classList,article,chapter,chapterList,freeList,bannerList };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/mock/data/user.js","import axios from 'axios';\r\nimport MockAdapter from 'axios-mock-adapter';\r\nimport { \r\n  LoginUsers, \r\n  Users , \r\n  classList,\r\n  article,\r\n  chapter,\r\n  chapterList,\r\n  freeList,\r\n  bannerList } from './data/user';\r\n\r\nlet _Users = Users;\r\nlet _classList = classList;\r\nlet _article = article;\r\nlet _chapter = chapter;\r\nlet _chapterList = chapterList;\r\nlet _freeList = freeList;\r\nlet _bannerList = bannerList;\r\n\r\n\r\nexport default {\r\n  /**\r\n   * mock bootstrap\r\n   */\r\n  bootstrap() {\r\n    let mock = new MockAdapter(axios);\r\n\r\n    // mock success request\r\n    mock.onGet('/success').reply(200, {\r\n      msg: 'success'\r\n    });\r\n\r\n    // mock error request\r\n    mock.onGet('/error').reply(500, {\r\n      msg: 'failure'\r\n    });\r\n\r\n    //登录\r\n    mock.onPost('/login').reply(config => {\r\n      let {username, password} = JSON.parse(config.data);\r\n      return new Promise((resolve, reject) => {\r\n        let user = null;\r\n        setTimeout(() => {\r\n          let hasUser = LoginUsers.some(u => {\r\n            if (u.username === username && u.password === password) {\r\n              user = JSON.parse(JSON.stringify(u));\r\n              user.password = undefined;\r\n              return true;\r\n            }\r\n          });\r\n\r\n          if (hasUser) {\r\n            resolve([200, { code: 200, msg: '请求成功', user }]);\r\n          } else {\r\n            resolve([200, { code: 500, msg: '账号或密码错误' }]);\r\n          }\r\n        }, 1000);\r\n      });\r\n    });\r\n\r\n    //获取用户列表\r\n    mock.onGet('/user/list').reply(config => {\r\n      let {name} = config.params;\r\n      let mockUsers = _Users.filter(user => {\r\n        if (name && user.name.indexOf(name) == -1) return false;\r\n        return true;\r\n      });\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            users: mockUsers\r\n          }]);\r\n        }, 1000);\r\n      });\r\n    });\r\n\r\n\r\n    //获取用户列表（分页）\r\n    mock.onGet('/user/listpage').reply(config => {\r\n      let {page, name} = config.params;\r\n      let mockUsers = _Users.filter(user => {\r\n        if (name && user.name.indexOf(name) == -1) return false;\r\n        return true;\r\n      });\r\n      let total = mockUsers.length;\r\n      mockUsers = mockUsers.filter((u, index) => index < 20 * page && index >= 20 * (page - 1));\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            total: total,\r\n            users: mockUsers\r\n          }]);\r\n        }, 1000);\r\n      });\r\n    });\r\n\r\n    //删除用户\r\n    mock.onGet('/user/remove').reply(config => {\r\n      let { id } = config.params;\r\n      _Users = _Users.filter(u => u.id !== id);\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            code: 200,\r\n            msg: '删除成功'\r\n          }]);\r\n        }, 500);\r\n      });\r\n    });\r\n\r\n    //批量删除用户\r\n    mock.onGet('/user/batchremove').reply(config => {\r\n      let { ids } = config.params;\r\n      ids = ids.split(',');\r\n      _Users = _Users.filter(u => !ids.includes(u.id));\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            code: 200,\r\n            msg: '删除成功'\r\n          }]);\r\n        }, 500);\r\n      });\r\n    });\r\n\r\n    //编辑用户\r\n    mock.onGet('/user/edit').reply(config => {\r\n      let { id, name, addr, age, birth, sex } = config.params;\r\n      _Users.some(u => {\r\n        if (u.id === id) {\r\n          u.name = name;\r\n          u.addr = addr;\r\n          u.age = age;\r\n          u.birth = birth;\r\n          u.sex = sex;\r\n          return true;\r\n        }\r\n      });\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            code: 200,\r\n            msg: '编辑成功'\r\n          }]);\r\n        }, 500);\r\n      });\r\n    });\r\n\r\n    //新增用户\r\n    mock.onGet('/user/add').reply(config => {\r\n      let { name, addr, age, birth, sex } = config.params;\r\n      _Users.push({\r\n        name: name,\r\n        addr: addr,\r\n        age: age,\r\n        birth: birth,\r\n        sex: sex\r\n      });\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            code: 200,\r\n            msg: '新增成功'\r\n          }]);\r\n        }, 500);\r\n      });\r\n    });\r\n\r\n    // 获取课程列表\r\n    mock.onGet('/class/list').reply(config => {\r\n      let {title} = config.params;\r\n      let mockClasses = _classList.filter(val => {\r\n        if (title && val.title.indexOf(title) == -1) return false;\r\n        return true;\r\n      });\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            classList: mockClasses\r\n          }]);\r\n        }, 1000);\r\n      });\r\n    });\r\n\r\n    // 编辑课程\r\n    mock.onGet('/class/edit').reply(config => {\r\n      let { id, title, banner,desc,tag,peoples, prize } = config.params;\r\n      _classList.some(c => {\r\n        if (c.id === id) {\r\n          c.title = title;\r\n          c.banner = banner;\r\n          c.desc = desc;\r\n          c.tag = tag;\r\n          c.peoples = peoples;\r\n          c.prize = prize;\r\n          return true;\r\n        }\r\n      });\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            code: 200,\r\n            msg: '编辑成功'\r\n          }]);\r\n        }, 500);\r\n      }); \r\n    });\r\n    // 增加课程\r\n    mock.onGet('/class/add').reply(config => {\r\n      let { id, title, banner,desc,tag,peoples, prize } = config.params;\r\n      _classList.push({\r\n          id:4, \r\n          title:title,\r\n          banner:banner,\r\n          desc:desc,\r\n          tag:tag,\r\n          peoples:peoples,\r\n          prize:prize\r\n      });\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            code: 200,\r\n            msg: '编辑成功',\r\n            data:{\r\n              id:4\r\n            }\r\n          }]);\r\n        }, 500);\r\n      });\r\n    });\r\n    // 删除课程\r\n    mock.onGet('/class/remove').reply(config => {\r\n      let { id } = config.params.id;\r\n      let index;\r\n      _classList.forEach( (c,i) => {\r\n        if( c.id == id ){\r\n          index = i;\r\n          return false;\r\n        }\r\n      } );\r\n      _classList.splice(index,1);\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            code: 200,\r\n            msg: '删除成功',\r\n            data:{\r\n              id:4\r\n            }\r\n          }]);\r\n        }, 500);\r\n      });\r\n    });\r\n\r\n    // 获取课程首页配置\r\n    mock.onGet('/class/classIndex').reply(config => {\r\n      let id = config.params.id;\r\n      // 随机生成一个传给前端\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            code: 200,\r\n            msg: '删除成功',\r\n            data:{\r\n              article:_article\r\n            }\r\n          }]);\r\n        }, 500);\r\n      });\r\n    } );\r\n    // 增加或者修改课程文章配置\r\n    mock.onGet('/class/addClassDetail').reply(config => {\r\n      // let id = config.params.id;\r\n      _article = config.params.article;\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([200, {\r\n            code: 200,\r\n            msg: '添加成功',\r\n            data:{\r\n              article:_article\r\n            }\r\n          }]);\r\n        }, 500);\r\n      });\r\n    });\r\n\r\n\r\n    // 获取章节列表\r\n    mock.onGet('/class/getClassChapter').reply(config => {\r\n      let id = config.params.classId;\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '添加成功',\r\n              data:{\r\n                chapterList:_chapter\r\n              }\r\n            }]);\r\n          }, 500);\r\n        });\r\n    });\r\n\r\n    // 修改课程章节信息\r\n    mock.onGet('/class/editClassChapter').reply(config => {\r\n      let { id,classId,title,desc } = config.params;\r\n      _chapter.forEach( val => {\r\n        if(val.id == id){\r\n          val.title = title;\r\n          val.desc = desc;\r\n        }\r\n      } );\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '修改成功',\r\n              data:{\r\n                text:'修改成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n\r\n    // 新增课程章节\r\n    mock.onGet('/class/addClassChapter').reply(config => {\r\n      let { id,classId,title,desc } = config.params;\r\n      _chapter.push({\r\n         id:id + 1,\r\n         classId:classId,\r\n         title:title,\r\n         desc:desc \r\n      })\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '添加成功',\r\n              data:{\r\n                text:'添加成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n\r\n    // 删除课程章节信息\r\n    mock.onGet('/class/removeClassChapter').reply(config => {\r\n      let {id,classId} = config.params;\r\n      let index;\r\n      _chapter.forEach( (val,i) => {\r\n        if(val.id == id){\r\n          index = i;\r\n        }\r\n      } );\r\n      _chapter.splice(index,1);\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '删除成功',\r\n              data:{\r\n                text:'删除成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n\r\n    // 获取章节内具体信息列表\r\n    mock.onGet('/class/getClassChapterList').reply(config => {\r\n      let id = config.params.id;\r\n      let classId = config.params.classId;\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '添加成功',\r\n              data:{\r\n                classChapterList:_chapterList\r\n              }\r\n            }]);\r\n          }, 500);\r\n        });\r\n    });\r\n\r\n    // 修改章节类二级信息\r\n    mock.onGet('/class/editClassChapterList').reply(config => {\r\n      let { id,type,title,desc,img,video,article } = config.params;\r\n      _chapterList.forEach( val => {\r\n        if(val.id == id){\r\n          val.type = type;\r\n          val.title = title;\r\n          val.desc = desc;\r\n          val.img = img;\r\n          val.video = video;\r\n          val.article = article;\r\n        }\r\n      } );\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '修改成功',\r\n              data:{\r\n                text:'修改成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n\r\n    // 新增课程章节\r\n    mock.onGet('/class/addClassChapterList').reply(config => {\r\n      let { id,type,title,desc,img,video,article } = config.params;\r\n      _chapterList.push({\r\n         id:id + 1,\r\n         type:type,\r\n         title:title,\r\n         desc:desc,\r\n         img:img,\r\n         video:video,\r\n         article:article\r\n      })\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '添加成功',\r\n              data:{\r\n                text:'添加成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n\r\n    // 删除课程章节信息\r\n    mock.onGet('/class/removeClassChapterList').reply(config => {\r\n      let {id,classId} = config.params;\r\n      let index;\r\n      _chapterList.forEach( (val,i) => {\r\n        if(val.id == id){\r\n          index = i;\r\n        }\r\n      } );\r\n      _chapterList.splice(index,1);\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '删除成功',\r\n              data:{\r\n                text:'删除成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n\r\n\r\n    // 获取免费列表\r\n    mock.onGet('/class/getClassFreeList').reply(config => {\r\n      let id = config.params.id;\r\n      let classId = config.params.classId;\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '添加成功',\r\n              data:{\r\n                freeList:_freeList\r\n              }\r\n            }]);\r\n          }, 500);\r\n        });\r\n    });\r\n\r\n    // 修改免费信息\r\n    mock.onGet('/class/editClassFreeList').reply(config => {\r\n      let { id,type,title,desc,img,video,article } = config.params;\r\n      _freeList.forEach( val => {\r\n        if(val.id == id){\r\n          val.type = type;\r\n          val.title = title;\r\n          val.desc = desc;\r\n          val.img = img;\r\n          val.video = video;\r\n          val.article = article;\r\n        }\r\n      } );\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '修改成功',\r\n              data:{\r\n                text:'修改成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n\r\n    // 新增免费\r\n    mock.onGet('/class/addClassFreeList').reply(config => {\r\n      let { id,type,title,desc,img,video,article } = config.params;\r\n      _freeList.push({\r\n         id:id + 1,\r\n         type:type,\r\n         title:title,\r\n         desc:desc,\r\n         img:img,\r\n         video:video,\r\n         article:article\r\n      })\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '添加成功',\r\n              data:{\r\n                text:'添加成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n\r\n    // 删除免费\r\n    mock.onGet('/class/removeClassFreeList').reply(config => {\r\n      let {id,classId} = config.params;\r\n      let index;\r\n      _freeList.forEach( (val,i) => {\r\n        if(val.id == id){\r\n          index = i;\r\n        }\r\n      } );\r\n      _freeList.splice(index,1);\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '删除成功',\r\n              data:{\r\n                text:'删除成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n  \r\n\r\n    // 获取轮播图列表\r\n    \r\n    mock.onGet('/class/getBannerList').reply(config => {\r\n      return new Promise((resolve, reject) =>{\r\n        setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '请求成功',\r\n              data:{\r\n                bannerList:_bannerList\r\n              }\r\n            }]);\r\n          }, 500);\r\n      })\r\n    });\r\n\r\n    // 编辑轮播图\r\n    mock.onGet('/class/editBannerList').reply(config => {\r\n      let { id,title,img,link } = config.params;\r\n      _bannerList.forEach( val => {\r\n        if(val.id == id){\r\n          val.title = title;\r\n          val.img = img;\r\n          val.video = link;\r\n        }\r\n      } );\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '修改成功',\r\n              data:{\r\n                text:'修改成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n\r\n    });\r\n\r\n    // 删除轮播图\r\n    mock.onGet('/class/removeBannerList').reply(config => {\r\n      let { id,title,img,link } = config.params;\r\n      let index;\r\n      _bannerList.forEach( (val,i) => {\r\n        if(val.id == id){\r\n          index = i;\r\n        }\r\n      } );\r\n      _bannerList.splice(index,1);\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '删除成功',\r\n              data:{\r\n                text:'删除成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n\r\n    // 新增轮播图\r\n    mock.onGet('/class/addBannerList').reply(config => {\r\n      let { id,title,img,link } = config.params;\r\n      _bannerList.push({\r\n         id:id + 1,\r\n         title:title,\r\n         img:img,\r\n         link:link\r\n      })\r\n      return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve([200, {\r\n              code: 200,\r\n              msg: '添加成功',\r\n              data:{\r\n                text:'添加成功'\r\n              }\r\n            }]);\r\n          }, 500);\r\n      });\r\n    });\r\n\r\n  }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/mock/mock.js","//test\r\nexport const increment = ({commit}) => {\r\n    commit('INCREMENT')\r\n}\r\nexport const decrement = ({commit}) => {\r\n    commit('DECREMENT')\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/vuex/actions.js","//test\r\nexport const getCount = state => {\r\n    return state.count\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/vuex/getters.js"],"sourceRoot":""}